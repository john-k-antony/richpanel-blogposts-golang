// Code generated by go-swagger; DO NOT EDIT.

package blog_post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/john-k-antony/richpanel-blogposts-golang/models/apimodels"
)

// ListBlogpostsOKCode is the HTTP code returned for type ListBlogpostsOK
const ListBlogpostsOKCode int = 200

/*
ListBlogpostsOK Blog posts

swagger:response listBlogpostsOK
*/
type ListBlogpostsOK struct {
	/*Total number of items

	 */
	PaginationCount int64 `json:"Pagination-Count"`
	/*Number of returned items

	 */
	PaginationLimit int64 `json:"Pagination-Limit"`
	/*Current page number

	 */
	PaginationPage int64 `json:"Pagination-Page"`

	/*
	  In: Body
	*/
	Payload []*apimodels.Blogpost `json:"body,omitempty"`
}

// NewListBlogpostsOK creates ListBlogpostsOK with default headers values
func NewListBlogpostsOK() *ListBlogpostsOK {

	return &ListBlogpostsOK{}
}

// WithPaginationCount adds the paginationCount to the list blogposts o k response
func (o *ListBlogpostsOK) WithPaginationCount(paginationCount int64) *ListBlogpostsOK {
	o.PaginationCount = paginationCount
	return o
}

// SetPaginationCount sets the paginationCount to the list blogposts o k response
func (o *ListBlogpostsOK) SetPaginationCount(paginationCount int64) {
	o.PaginationCount = paginationCount
}

// WithPaginationLimit adds the paginationLimit to the list blogposts o k response
func (o *ListBlogpostsOK) WithPaginationLimit(paginationLimit int64) *ListBlogpostsOK {
	o.PaginationLimit = paginationLimit
	return o
}

// SetPaginationLimit sets the paginationLimit to the list blogposts o k response
func (o *ListBlogpostsOK) SetPaginationLimit(paginationLimit int64) {
	o.PaginationLimit = paginationLimit
}

// WithPaginationPage adds the paginationPage to the list blogposts o k response
func (o *ListBlogpostsOK) WithPaginationPage(paginationPage int64) *ListBlogpostsOK {
	o.PaginationPage = paginationPage
	return o
}

// SetPaginationPage sets the paginationPage to the list blogposts o k response
func (o *ListBlogpostsOK) SetPaginationPage(paginationPage int64) {
	o.PaginationPage = paginationPage
}

// WithPayload adds the payload to the list blogposts o k response
func (o *ListBlogpostsOK) WithPayload(payload []*apimodels.Blogpost) *ListBlogpostsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list blogposts o k response
func (o *ListBlogpostsOK) SetPayload(payload []*apimodels.Blogpost) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListBlogpostsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Pagination-Count

	paginationCount := swag.FormatInt64(o.PaginationCount)
	if paginationCount != "" {
		rw.Header().Set("Pagination-Count", paginationCount)
	}

	// response header Pagination-Limit

	paginationLimit := swag.FormatInt64(o.PaginationLimit)
	if paginationLimit != "" {
		rw.Header().Set("Pagination-Limit", paginationLimit)
	}

	// response header Pagination-Page

	paginationPage := swag.FormatInt64(o.PaginationPage)
	if paginationPage != "" {
		rw.Header().Set("Pagination-Page", paginationPage)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*apimodels.Blogpost, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListBlogpostsUnauthorizedCode is the HTTP code returned for type ListBlogpostsUnauthorized
const ListBlogpostsUnauthorizedCode int = 401

/*
ListBlogpostsUnauthorized Unauthenticated Request

swagger:response listBlogpostsUnauthorized
*/
type ListBlogpostsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *apimodels.ResponseError `json:"body,omitempty"`
}

// NewListBlogpostsUnauthorized creates ListBlogpostsUnauthorized with default headers values
func NewListBlogpostsUnauthorized() *ListBlogpostsUnauthorized {

	return &ListBlogpostsUnauthorized{}
}

// WithPayload adds the payload to the list blogposts unauthorized response
func (o *ListBlogpostsUnauthorized) WithPayload(payload *apimodels.ResponseError) *ListBlogpostsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list blogposts unauthorized response
func (o *ListBlogpostsUnauthorized) SetPayload(payload *apimodels.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListBlogpostsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
